Vagrant.configure("2") do |config|
	config.vm.define "master" do |master|

	    master.vm.box = "centos/7"

	    master.vm.network "private_network", ip: "192.168.10.21"

	    master.vm.hostname = "master"

	    master.vm.provider :virtualbox do |vb|

	      vb.customize ["modifyvm", :id, "--memory", "2048"]

	      vb.customize ["modifyvm", :id, "--cpus", "2"]

	      end

	    master.vm.provision "shell", inline: <<-SHELL

	      sudo echo "192.168.10.21 master" | sudo tee -a /etc/hosts

	      sudo echo "192.168.10.22 node-1" | sudo tee -a /etc/hosts
			
	      sudo yum update -y

	      sudo yum install docker -y

	      setenforce 0
		  sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux

		  modprobe br_netfilter
		  echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
	      
	      # kubelet requires swap off
		  swapoff -a
		  # keep swap off after reboot
		  sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

		  sudo yum install docker -y
		  
		  echo "[kubernetes]" >>/etc/yum.repos.d/kubernetes.repo
		  echo "name=Kubernetes" >>/etc/yum.repos.d/kubernetes.repo
	  	  echo "baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64" >>/etc/yum.repos.d/kubernetes.repo
		  echo "enabled=1" >>/etc/yum.repos.d/kubernetes.repo
		  echo "gpgcheck=1" >>/etc/yum.repos.d/kubernetes.repo
		  echo "repo_gpgcheck=1" >>/etc/yum.repos.d/kubernetes.repo
		  echo "gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg" >>/etc/yum.repos.d/kubernetes.repo

  		  sudo yum install kubeadm -y
  		  systemctl restart docker && systemctl enable docker
		  systemctl  restart kubelet && systemctl enable kubelet
		  
		  # Get the IP address that VirtualBox has given this VM
		  IPADDR=`ip addr | grep eth1 | grep inet | cut -d " " -f6 | cut -d "/" -f1`
		  #echo This VM has IP address $IPADDR
		  # Set up Kubernetes
		  NODENAME=$(hostname -s)
		  #kubeadm init --apiserver-cert-extra-sans=$IPADDR  --node-name $NODENAME
		  kubeadm init --apiserver-advertise-address=$IPADDR --pod-network-cidr=192.168.0.0/16
		  mkdir -p $HOME/.kube
  		  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  		  sudo chown $(id -u):$(id -g) $HOME/.kube/config

	    SHELL

	end

	config.vm.define "node-1" do |node1|

	    node1.vm.box = "centos/7"

	    node1.vm.network "private_network", ip: "192.168.10.22"

	    node1.vm.hostname = "node-1"

	    node1.vm.provision "shell", inline: <<-SHELL

	       sudo echo "192.168.10.21 master" | sudo tee -a /etc/hosts

	       sudo yum update -y

	       setenforce 0
		   sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux

		   modprobe br_netfilter
		   echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
	       

	       # kubelet requires swap off
		   swapoff -a
		   # keep swap off after reboot
		   sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

		   sudo yum install docker -y
		   
		   echo "[kubernetes]" >>/etc/yum.repos.d/kubernetes.repo
		   echo "name=Kubernetes" >>/etc/yum.repos.d/kubernetes.repo
	  	   echo "baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64" >>/etc/yum.repos.d/kubernetes.repo
		   echo "enabled=1" >>/etc/yum.repos.d/kubernetes.repo
		   echo "gpgcheck=1" >>/etc/yum.repos.d/kubernetes.repo
		   echo "repo_gpgcheck=1" >>/etc/yum.repos.d/kubernetes.repo
		   echo "gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg" >>/etc/yum.repos.d/kubernetes.repo
  		   
  		   yum install kubeadm -y

  		   systemctl restart docker && systemctl enable docker
		   systemctl  restart kubelet && systemctl enable kubelet
		   #mkdir -p $HOME/.kube
  		   #sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  		   #sudo chown $(id -u):$(id -g) $HOME/.kube/config

		   # Get the IP address that VirtualBox has given this VM
		   #IPADDR=`ifconfig enp0s8 | grep Mask | awk '{print $2}'| cut -f2 -d:`
		   #echo This VM has IP address $IPADDR

		   # Set up Kubernetes
		   #NODENAME=$(hostname -s)
		   

	    SHELL

	end

	#config.vm.define "node-2" do |node2|

	#      node2.vm.box = "centos/7"

	#      node2.vm.network "private_network", ip: "192.168.10.23"

	#      node2.vm.hostname = "node-2"

	#      node2.vm.provision "shell", inline: <<-SHELL

	#       sudo echo "192.168.10.21 master" | sudo tee -a /etc/hosts

	#    SHELL

	#end
end
